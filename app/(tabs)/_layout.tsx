// app/(tabs)/_layout.tsx 

import { Ionicons } from '@expo/vector-icons';
import { Redirect, Tabs } from 'expo-router';
import React from 'react';
import { useAuth } from '../../components/AuthContext';


// üö® Componente Auxiliar para o √çcone
function TabBarIcon(props: {
  name: React.ComponentProps<typeof Ionicons>['name'];
  color: string;
}) {
  return <Ionicons size={28} style={{ marginBottom: -3 }} {...props} />;
}

export default function TabLayout() {
  const { user, loading } = useAuth(); 

  // Se o estado de autentica√ß√£o ainda est√° carregando, n√£o renderize nada para evitar "flicker".
  if (loading) {
    return null; // Ou um componente de loading.
  }
  
  const PRIMARY_COLOR = '#E91E63'; 
  const ACCENT_COLOR = '#00A86B'; 

  // Esta √© a "guarda de rota". Se n√£o houver usu√°rio, redireciona para a tela de login.
  if (!user) {
    return <Redirect href="/auth/login" />;
  }

  return (
    <Tabs
      screenOptions={{
        tabBarActiveTintColor: PRIMARY_COLOR,
        // Garante que o cabe√ßalho seja vis√≠vel e tenha o nome do grupo de abas
        headerShown: true,
        tabBarStyle: {
           
            backgroundColor: '#FFFFFF',
            borderTopColor: '#F0F0F0',
        }
      }}
    >
      {/* 1. ABA PADR√ÉO (index.tsx) */}
      <Tabs.Screen
        name="index"
        options={{
          title: 'Home',
          tabBarIcon: ({ color }) => <TabBarIcon name="home-outline" color={color} />,
          headerTitle: 'Bem-vinda(o)!',
        }}
      />
      
      {/* 2. ABA DE CICLOS (cycles.tsx) */}
      <Tabs.Screen
        name="cycles"
        options={{
          title: 'Ciclos',
          tabBarIcon: ({ color }) => <TabBarIcon name="calendar-outline" color={color} />,
          headerTitle: 'Meu Calend√°rio',
        }}
      />

      {/* 3. ABA DE CONFIGURA√á√ïES (settings.tsx) */}
      <Tabs.Screen
        name="settings"
        options={{
          title: 'Ajustes',
          tabBarIcon: ({ color }) => <TabBarIcon name="settings-outline" color={color} />,
          // O bot√£o de Logout pode ser adicionado ao cabe√ßalho aqui
          headerRight: () => (
            <Ionicons 
                name="log-out-outline" 
                size={24} 
                color={PRIMARY_COLOR} 
                style={{ marginRight: 15 }}
                // Adicione a fun√ß√£o de logout aqui se user.logout existir
                // onPress={() => auth.signOut()} 
            />
          ),
        }}
      />
      
      {/* üö® CORRE√á√ÉO: daily-log e modal n√£o devem aparecer como abas */}
      {/* Oculta arquivos que s√£o modais ou auxiliares para que n√£o apare√ßam na barra de abas */}
      <Tabs.Screen name="daily-log" options={{ href: null }} />
      <Tabs.Screen name="modal" options={{ href: null }} /> 
      
    </Tabs>
  );
}